<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/"><channel><title>search on hurutoriya</title><link>https://shunyaueta.com/tags/search/</link><description>Recent content in search on hurutoriya</description><image><url>https://shunyaueta.com/ogp.jpg</url><link>https://shunyaueta.com/ogp.jpg</link></image><generator>Hugo -- gohugo.io</generator><language>ja</language><lastBuildDate>Sat, 03 Dec 2022 11:26:49 +0900</lastBuildDate><atom:link href="https://shunyaueta.com/tags/search/index.xml" rel="self" type="application/rss+xml"/><item><title>Search Engineering Newsletter vol.12</title><link>https://shunyaueta.com/posts/2022-12-03-1126/</link><pubDate>Sat, 03 Dec 2022 11:26:49 +0900</pubDate><guid>https://shunyaueta.com/posts/2022-12-03-1126/</guid><description>Search 情報検索・検索技術 Advent Calendar 2022 - Adventar
2021 年に引き続き、検索技術に関するアドベントカレンダーを作成しました。12 月に入ったので、アドベントカレンダー自体始まっていますが、12/14,16 の枠がまだ空いているので興味のある方はぜひご参加ください。現時点で、21 人の方にご参加してもらっています! 感謝!!
日本語用オートコンプリートのための Analyzer | @johtani の日記 3rd ローマ字入力のゆれと読み（JapaneseCompletionAnalyzer その 2） | @johtani の日記 3rd マルチテナンシー下での Query Auto Completion 設計・運用戦略 - LegalOn Technologies Engineering Blog クエリ自動補完(Query Auto Completion) に関する記事。@johtani さんがかなり詳しく解説してくれています。 @mocobeta さんが自分で開発して、そのまま Elasticsearch にプルリクエストを作ってマージされているとかかっこよすぎませんか? 日本人のコミッターがいるおかげで、日本語周りの機能が拡充されるの本当にありがたいですね。
〇〇みたいな検索作ってと言われたときに考えること
検索ジャーニーから何が価値がある機能なのかを決めましょうとデータがないとなんにもできないよという非常に大事なお話。
ニアリアルタイムで同期される検索基盤を構築 ~AWS Glue によるデータ同期編~ - コネヒト開発者ブログ ニアリアルタイムで同期される検索基盤 ~パイプライン構築編~ - コネヒト開発者ブログ @asteriam さんによる検索エンジン内製化に関する記事シリーズ。 AWS 上で、検索基盤を構築しており、AWS の各種サービスをフル活用しており参考になります。
グーグル、検索で国ごとに最適化　アジア主要国にチーム: 日本経済新聞</description></item><item><title>情報検索・検索技術 Advent Calendar 2022 を開催します</title><link>https://shunyaueta.com/posts/2022-11-05-1147/</link><pubDate>Sat, 05 Nov 2022 11:47:43 +0900</pubDate><guid>https://shunyaueta.com/posts/2022-11-05-1147/</guid><description>2021 年に引き続き、2022 年も情報検索・検索技術 Advent Calendar を作ってみました。
情報検索・検索技術 Advent Calendar 2022 - Adventar
kivantium さんの 創作+機械学習 Advent Calendar 2022 を開催します - kivantium 活動日記 の記事がいいなと思ったので、僕も自分の Blog で告知しておきます。
2021 年にアドベントカレンダーを作成したきっかけとしては、そもそもブログ記事の執筆が自分は好き他人が書いた記事を読むのは楽しい。 アドベントカレンダーの文化はそういう自分の嗜好にぴったりなので、自分の好きな検索技術領域がまだ作られていない! 作らねば! というのがモチベーションでした。
実際のところ、検索技術に携わってはいるが、Blog 記事をあまり書かない人もアドベントカレンダー起因で記事を書くきっかけになっているじゃないかなと思っています。
現時点で 登録数 12/25人となっています。ご登録頂いた方々ありがとうございます! みんなでワイワイ投稿して盛り上げていきましょう。</description></item><item><title>Search Engineering Newsletter vol.11</title><link>https://shunyaueta.com/posts/2022-10-30-2257/</link><pubDate>Sun, 30 Oct 2022 22:57:24 +0900</pubDate><guid>https://shunyaueta.com/posts/2022-10-30-2257/</guid><description>Search qdrant/quaterion: Blazing fast framework for fine-tuning similarity learning models
類似学習のための転移学習を高速に実現できるバッケージ。 PyTorch Lightning をベースに作られている。Qdrant という Rust 製のニューラル検索エンジンを開発する企業が開発している。 Rust による検索エンジンの再開発、盛り上がっていますね~
Qdrant - Benchmarks のようなベンチマークを公開していますが、ベクター検索エンジンの公平なベンチマークってとても難しそう(小並感)
hurutoriya/doraemon-himitsu-dogu-search: Doraemon Himitsu Dogu Japanese hybrid search based on Elascticsearch ANN x multi match Elasticsearch 8.4 から利用可能な従来の検索機能と近似近傍探索を組み合わせたハイブリッド検索を試す Elasticsearch8 系から近似近傍探索機能が利用可能になりましたが、従来の検索機能(term, fillter など)と組み合わせることはできませんでしたが、Elasticsearch 8.4 から待望の knn による近似近傍探索と従来の検索を組み合わせたハイブリッド検索が可能になったので、その機能をドラえもんのひみつ道具をデータセットとして収集して検索エンジンアプリを公開してみました。 実際に近似近傍探索の現実的な適用例が爆発的に普及しそうです。 近似近傍探索の結果を特定のカテゴリで枝刈りする(filtter)などが当たり前に実現できれば、クオリティコントロール自体もブレークスルーが起きそうですね。
実は、GCP Matching Engine では近似近傍探索内部でフィルタリングなども可能なのだが、これは Elasticsearch のような仕組みとは違いそうだなと思っている。 ベクトル一致をフィルタする | Vertex AI | Google Cloud また、ちょっと色が違いますが、近似近傍探索自体を部分集合に対して行いたいなどのモチベーションの研究はあり、東大の松井先生などが論文も出されています。 Reconfigurable Inverted Index</description></item><item><title>Elasticsearch 8.4 から利用可能な従来の検索機能と近似近傍探索を組み合わせたハイブリッド検索を試す</title><link>https://shunyaueta.com/posts/2022-10-29-2337/</link><pubDate>Sat, 29 Oct 2022 23:37:35 +0900</pubDate><guid>https://shunyaueta.com/posts/2022-10-29-2337/</guid><description>表題の通り、Elasticsearch 8.4 から待望の近似近傍探索と従来の検索を組み合わたハイブリッド検索が可能になったらしいので、試してみました。
Elascticsearch 8 で導入された近似近傍探索について Elasticsearch 公式の記事1がわかりやすく近似近傍探索について語られています。 また、日本語では@pakio さんの紹介記事2も非常にわかりやすいので、そちらも御覧ください。
嬉しいけど物足りない点 公式の資料3や@pakio さんの資料でも触れられていますが、
You can’t currently use the Query DSL to filter documents for an approximate kNN search. If you need to filter the documents, consider using exact kNN instead. Elasticsearch の Query DSL との併用不可というのが物足りない点でした。
端的に説明すると Elasticsearch 8 で利用可能になった近似近傍探索は、あくまでベクトル間のみの近似近傍探索のみできるのであって、従来の Elasticsearch の検索機能(term や filter)と近似近傍探索を組み合わせて検索できないということです。
Vespa の開発者の Jo さんも同様の点4について触れていました。
The most surprising part of the announcement is that they won&amp;rsquo;t allow combining the nearest neighbor search with standard query terms and filters.</description></item><item><title>Elasticsearchの近似近傍探索を使って、ドラえもんのひみつ道具検索エンジンを作ってみた</title><link>https://shunyaueta.com/posts/2022-10-23-2344/</link><pubDate>Sun, 23 Oct 2022 23:44:13 +0900</pubDate><guid>https://shunyaueta.com/posts/2022-10-23-2344/</guid><description>Elasticsearch 8 系から使用可能になった近似近傍探索1を使って、ドラえもんのひみつ道具の自然言語検索ができる検索エンジンを作ってみた。
デモ動画のように、検索したいひみつ道具を説明する文章することで近しいひみつ道具が検索されます。
コードは GitHub に公開してあるので、興味のある方は手元で、動かして遊ぶことが出来ます。 poetry と Docker さえあれば動くようになっています。
hurutoriya/doraemon-himitsu-dogu-search: Doraemon Himitsu Dogu Japanese semantic search based on Elascticsearch ANN
システムの概要図はこんな感じ
所感 ドラえもんのひみつ道具のデータセットを今回１から作ったが、パースと前処理がめんどくさくてここが一番手間がかかった。が、工夫しないと出来なかったので、一番楽しいところでもあった。 文章の特徴抽出は、sonoisa/sentence-bert-base-ja-mean-tokens-v2 · Hugging Faceを使わせていただき、驚くほど簡単に実現できた。 実際はもっと精度を高めるには、fine tune などがいいのだろうが、システム側を作ることに注力したかったので今回は割愛 デモアプリの構築は streamlit を使って 20m くらいで作れたので、相変わらず便利すぎて愛用している。今回の検索エンジンは CLI から実行もできるが、こうやってデモアプリがあったほうがそれっぽくて気持ちいい。 インデキシング時にトーカナイザーのことなど全く考えずに特徴ベクトルだけインデキシングして、それで検索が成り立つというのは新鮮。閾値設定しなければゼロヒット問題にも直面しないので、できることの幅は広がりそう。 Elasticsearch の近似近傍探索は、今回ベクトル同士の近似近傍探索しかやっていないが、それもインデキシング、クエリ部分は公式ドキュメントを見れば事足りたので変にハマることはなかった。 クエリ部分はこれだけで書けた。
1 2 3 4 5 6 7 8 9 10 query = { &amp;#34;knn&amp;#34;: { &amp;#34;field&amp;#34;: &amp;#34;vector&amp;#34;, &amp;#34;query_vector&amp;#34;: sentence_embeddings[0], &amp;#34;k&amp;#34;: 10, &amp;#34;num_candidates&amp;#34;: 100, }, &amp;#34;fields&amp;#34;: [&amp;#34;name&amp;#34;, &amp;#34;description&amp;#34;], } result = es.</description></item><item><title>Search Engineering Newsletter vol.10</title><link>https://shunyaueta.com/posts/2022-09-08-1722/</link><pubDate>Thu, 08 Sep 2022 17:22:09 +0900</pubDate><guid>https://shunyaueta.com/posts/2022-09-08-1722/</guid><description>節目となる 10 回目のニュースレター配信です。 今回のイチオシ記事は ABEJA さんの「GPT モデルへの道のり」とメルカリさんの「お手軽な検索 API 構築」記事です。
Search How we&amp;rsquo;re improving search results when you use quotes - Google Google、引用符による完全一致検索結果をフレーズを中心に表示するよう改善 - PC Watch ダブルクォートを使った完全一致検索を行う際に、web ページのヘッダーや URL などは検索対象外になることで、Google の Web 検索体験を改善した。
厳格なテスト – Google 検索の仕組み
Google 検索がどのようにテスト・評価を行っているか。 2021 年に、約 4000 件の変更、約 11000 件の AB テストを行っているらしく驚き。 簡単に逆算しても月間に 900 件 AB テスト???をやっていることになるのだが、どんなことをすればこんな数の AB テストを実行可能になるのだろうか&amp;hellip;。 例えば、一つの AB テストで、セグメントと 5 分割したからこれを５回としますならわかるけど、それでも月間に 180 回の AB テストなので現実味がないですね。 Google 検索に関わるエンジニアの数が全体でどれくらいいるのか気になりますが、この成果はさすが世界最大規模の検索エンジンですね。
お手軽な検索 API 構築 | メルカリエンジニアリング</description></item><item><title>Search Engineering Newsletter vol.09</title><link>https://shunyaueta.com/posts/2022-08-24-2314/</link><pubDate>Wed, 24 Aug 2022 23:14:39 +0900</pubDate><guid>https://shunyaueta.com/posts/2022-08-24-2314/</guid><description>今回のイチオシ記事は、Doug さんの What is a Relevance Engineer? と Ubie さんの Esqa の記事です。
Search Elasticsearch の検索精度のチューニング 〜テストを作って高速かつ安全に〜
ubie-oss/esqaという Elasticsearch の検索品質をテストできる OSS の紹介。 検索結果に対して、アサーションや過去と現在のランキングの比較を距離として計算してしきい値以上で計算する事ができるらしい。 検索結果のチューニングの辛い点をできるだけ緩和できそうで、これは便利そう。ステートフルなシステムである検索システムをデグレなどを考慮して日々のメンテナンスするの大変ですよね&amp;hellip;
What is a Relevance Engineer? - OpenSource Connections
日本だとあまり聞き慣れない Relevance Engineer という Job Role ですが、Relevance Engineer に求められる職務内容ってなんだろうと Doug Turnbull さん(Relevant Searchの著者)が執筆した記事。 一般的に日本だと検索エンジニアでひとくくりにされていますが、海外だともう少し細分化されるみたいですね。
Relevance Engineer は、システムの正確性/関連性(Relevance)とパフォーマンス/安定性の間のスイートスポットにまたがる 8 割の問題は、Relevance Engineer は最先端の手法は追いかけず、伝統的な手法で解決する(BM25, Learning to Rank)。なぜならメンテナンス性、スケーラビリティが共に優れているからである 2 割の問題は、先進的な技術を適用する必要がある。NLP や IR 領域の先端事例を常に把握して、その適用を試みる。 Relevance Engineer の業務はデータ中心である Relevance Engineer はデータ駆動で課題を解決する。意思決定は Relevance 指標, performance metrics を基準に行う。 また、Relevance 指標は一概に Ground Truth を決定できないこともある。その場合は、ドメインエキスパートと協業して、顧客がなぜその結果を好んでいるのかを理解して、データを作って行く必要がある。 Relevance Engineer は、Kaggle や学会の課題ではなく実際の企業や顧客の検索課題を解決する。これが意味するのは精度と同程度にシステム面のパフォーマンスにも関心を持っていることを意味する。 Machine Learning Engineer vs Relevance Engineer 最大の差異は、機械学習に焦点を当てているのか、情報検索に焦点をあてているのか また、Relevance Engineer は検索システムを通じて密接に顧客体験に影響を与えるので、それらを考慮する必要がある。 NOTE: ML Engineer も考慮する必要があると思うので、若干ポジショントーク感が強く感じますね。 Interview Questions for Search Relevance Engineers, Data Scientists, and Product Managers | by Daniel Tunkelang | Medium</description></item><item><title>Search Engineering Newsletter vol.08</title><link>https://shunyaueta.com/posts/2022-07-15-1045/</link><pubDate>Fri, 15 Jul 2022 10:45:19 +0900</pubDate><guid>https://shunyaueta.com/posts/2022-07-15-1045/</guid><description>Search Engineering Newsletter 8 回目の配信です。
今回のイチオシは、Retty さんの検索機能をマイクロサービスとして切り出したお話と、MoT さんの勉強会資料である「Tesla におけるコンピュータビジョン技術の調査」です。
Search 検索サービスの構築 - Retty Tech Blog
Retty で検索サービスをマイクロサービスとして切り出したお話。 切り出した理由としては Elasticsearch が返すレスポンスをベースにして各サービスでそのまま使われていた。だが、各サービスがこのフォーマットに依存しているせいで気軽に Elasticsearch の更新ができなかったり、レスポンスを変えるような検索改善も行うのが難しくなっていたのを起因にマイクロサービスへと切り出した。
NOTE:インタフェース設計が割り切っており、お店の id のみを返し全てのデータは検索エンジンは返さないようにしているのが良い設計だなと思いました。今までは、検索エンジンに反映されるまでリードタイムが 1 日あり、古い結果が返ることもあったのところです。実際に、検索エンジンがお店の情報管理を責任を持つのは違いますしね。 また、Go で Elasticsearch の API client として、比較を行ったり、マイクロサービスの切替時にどうやって検索結果が等しく切り出せているかを検証しつつ切り出したのは面白かったです。
Elasticsearch で個人ごとに検索結果を表示するには？　ZOZOTOWN を支える検索パーソナライズ基盤アーキテクチャ - ログミー Tech
2020 年 6 月の記事で少し古いですが、ZOZO さんの検索結果をパーソナライズする機能をどのようにつくったかが紹介されています。
「新しいおうち探し」のための AI アシスト検索 〜 Yahoo!不動産の技術紹介 - Yahoo! JAPAN Tech Blog
不動産検索で、機械学習をどうやって活用しているかの紹介記事。 アイデアとして面白いなと思ったのは、NIMA1という画像の審美的美しさを採点するモデルを使って、不動産の外観画像のスコアリングを行っていた点が面白かった。
Search architecture revamp Grab が検索システムをどう刷新したか。
2021 年以前、Grab の検索アーキテクチャは、Elasticsearch をベースにしたテキストマッチングのみをサポートしていた。 課題点としては、
テキストマッチングのみが検索にヒットし、検索意図や文脈が考慮されない たとえば、「Bread(パン)」というクエリで検索した場合、昼ならパンを提供するカフェを探している可能性が高いが、朝なら朝ごはんにパンを食べるために検索を行っている可能性が高い。 Grab は複数のビジネス領域をサポートしているが、各領域の結果が効果的に混ざっていない レガシーコードベースの影響で、改修速度が遅くなっており迅速な新機能開発ができない 刷新後の検索システムは、Multi-recall という枠組みで、検索エンジンを Elasticsearch 以外に、recall を向上させる見込みで埋め込み空間やグラフベースでの Semantic Search を追加。これにより、検索品質の改善を期待している。 (SementicSearch をどう実現しているかの詳細は全く書かれていなくて残念)</description></item><item><title>Search Engineering Newsletter vol.07</title><link>https://shunyaueta.com/posts/2022-06-10-1135/</link><pubDate>Fri, 10 Jun 2022 11:35:48 +0900</pubDate><guid>https://shunyaueta.com/posts/2022-06-10-1135/</guid><description>Search Engineering Newsletter 7 回目の配信です。 今回のイチオシは、Andre Ng 先生の対談記事「Unbiggen AI」です。
Search Go beyond the search box: Introducing multisearch
Google が導入する、画像検索 → 自然言語による検索の二段階検索である multisaerch。
Google IO 2022 で、強調されていたのは Google Lens と組み合わせて multisaerch をできるようにしたいと提案されていて、なるほど! 確かに日常的に Google Lens を装着するようになれば multisearch の利用状況はものすごく自然だなと思った。 妄想だが、Google Lens がスタンドアロンで動くように機械学習モデルとかは乗せる必要は極論必要なくて、Google Pixel 上に搭載された機械学習モデルで処理を実行、その結果を視覚には Google Lens 、聴覚には Google Pixel Buds という組み合わせもありそうだなと思いを馳せた。
How our Quality Raters make Search results better - Google Search Help
Google が公開している、検索品質の評価者が検索結果をどのようにかいぜんしているか。仕事でも検索品質の評価ガイドラインを先日書いていたが、かなり参考にさせてもらった。こういう質の高い文章を書けるようになっていきたい。 利用者にこういうことをするといいよとメッセージとして啓蒙する役割もあるのかもしれない。
Our Search Liaison on 25 years of keeping up with search 25 年間検索業界に関わってきた Google 検索の広報担当者である Danny さんのインタビュー記事。良い感じに Google 検索の改善の歴史がまとまっているので、良い記事をたくさん見つけることができた。</description></item><item><title>Search Engineering Newsletter vol.06</title><link>https://shunyaueta.com/posts/2022-05-24-2346/</link><pubDate>Tue, 24 May 2022 23:46:38 +0900</pubDate><guid>https://shunyaueta.com/posts/2022-05-24-2346/</guid><description>6 回目の配信です。 今回のイチオシは、DoorDash の検索システム刷新の記事です。
Search Apache Solr Release Notes
Solr 9.0.0 がリリースされました。 Elasticsearch と同じく、 Lucene 9 の ANN をサポートしたことにより、近傍探索機能が追加された。
Apache Solr 9.0.0 がリリースされました！ - KandaSearch
リリース文の日本語訳も公開されていました。
Also in 9.0 is a brand new Solr Ref Guide, completely re-organized and built on @antoraproject which gives us a dozen features we&amp;rsquo;ve wanted like search. Which is probably the one you really wanted too: https://solr.apache.org/guide/solr/latest/ &amp;gt; https://twitter.com/childerelda/status/1524854759022379017
Solr 9 のリリースに伴い、Apache Solr Reference Guide も再編成されました。検索機能がサイトに搭載されたと言及されているので便利になったのでは?</description></item><item><title>Search Engineering Newsletter vol.05</title><link>https://shunyaueta.com/posts/2022-05-02-2350/</link><pubDate>Mon, 02 May 2022 23:50:35 +0900</pubDate><guid>https://shunyaueta.com/posts/2022-05-02-2350/</guid><description>5 回目のニュースレター配信です。更新頻度を保つために、1 時間で読めるだけ記事を読んで配信していくスタイルに次回からしようと思いました。 本格的に精読したい面白い記事が来ると一時間なんて一瞬で潰れてしまう&amp;hellip;
Search Introducing Natural Language Search for Podcast Episodes
Spotify が Podcast 検索において text matching の従来の検索エンジンではなく、ニューラル検索を導入した解説記事。 ニューラル検索の実運用例として面白かったので、以下に抄訳として内容をまとめた。
Beyond term-based Search 「electric cars climate impact」と自然言語のクエリを Elasticsearch に投げても何も検索結果が表示されなかった&amp;hellip;だが検索されなかったのは、Spotify 上の Podcast に関連する内容がなかったからなのだろうか?
NOTE:個人的に本当に結果が出なかったのかは気になるところではある。ワードの完全一致ならともかく、BoW や BM25 で検索すれば結果は出るのでは&amp;hellip;?
Natural Language Search 自然言語検索(Natural Language Search、またの名を意味検索(Semantic Search) と呼ばれる技術について調査を始めた。すごくざっくり言えば、従来ではクエリとドキュメントの単語の一致によって検索を行っていたが、意味検索ではクエリとドキュメントの意味的な相関によって検索を行う。
実際の検索結果の例を見ても、クエリのすべての単語が Podcast のタイトルには含まれていない(Elasticsearch が検索結果を出さない理由でもある)が検索結果として妥当なことがわかる。
Technical solution これらの結果を実現するために深層学習の技術である、自己教師学習と Transformer を利用、そしてそれらの結果を高速に提供するために近似近傍探索(Approximate Nearest Neighbor (ANN))を利用する。
共通の埋め込み空間上で、クエリのベクトルに近い Podcast を検索結果として計算する。また、Podcast の題目、説明文、そして親ポッドキャストのテキスト情報などを連結して特徴量とする。
Picking the right pre-trained Transformer model for our task BERT のような Transformer モデルは、自然言語処理タスクでは現在最高峰の性能を誇っている。 BERT は 2 つの観点から高性能になっている</description></item><item><title>Search Engineering Newsletter vol.04</title><link>https://shunyaueta.com/posts/2022-04-07/</link><pubDate>Thu, 07 Apr 2022 14:13:02 +0900</pubDate><guid>https://shunyaueta.com/posts/2022-04-07/</guid><description>Search Engineering Newsletter - revue で 3 回配信してみた結果、自分のウェブサイトから情報配信することと、ニュースレターを通じた情報発信はあまり変わらないなと感じた。
結論 Revue での配信はやめて自分のブログでニュースレターを発信することにしました。 メール配信ではないのでニュースレターと読んでいいかはわかりませんが&amp;hellip;
ニュースレターの記事をtagとしてまとめた記事一覧はこちらです。
https://shunyaueta.com/tags/newsletter/
経緯 例えば、過去に言及1した
ニュースレター形式だと Twitter では届かない層
だが、自分のサイトは公開しているので、誰でも見れる。 そのためリーチする層に差が出るわけでもなかったかなと今更ながら気づいた。
また、
高品質な情報を一箇所にまとめて発信するなら Revue を使わなくても自分のサイトを通じても問題なく発信できるのでは 可能なら自分の執筆物を分散させずにまとめたい メール配信で届くというのは Revue の一つの特色ではあると思いますが、ニュースレターの RSS を用意すれば、メール配信はされなくなりますが、RSS でも同じような経験を体験できる などの理由もあった。
ニュースレターを通じた読んだ記事の感想まとめ行為は、単に流し読みするよりも自分の言葉で説明できるように理解に務めるので、自分の情報収集の消化の場として優れていることがわかったのは収穫でした。
なのでもしニュースレターを気に入っていただけた読者の方がもしいればご安心ください(続けますよ(春日さん風に))
代替手段として、newsletter のタグを付与した記事の RSS2 を作成しています。 手持ちの RSS リーダーに登録していただければ newsletter の更新を簡単に管理することができます。
Search Engineering Newsletter vol.00 &amp;#x21a9;&amp;#xfe0e;
newsletter RSS: https://shunyaueta.com//tags/newsletter/index.xml &amp;#x21a9;&amp;#xfe0e;</description></item><item><title>Search Engineering Newsletter vol.03</title><link>https://shunyaueta.com/posts/2022-03-28/</link><pubDate>Mon, 28 Mar 2022 22:17:33 +0900</pubDate><guid>https://shunyaueta.com/posts/2022-03-28/</guid><description>3 回目のニュースレター配信です。
前回配信した中での人気記事 Top3 メール配信で最もアクセスされた記事を紹介します。
Amazon が e コマース検索を Lucene により、どうスケールさせているか at Berlin Buzzwords 2019 6 clicks 390 億から 820 億パラメータへ｜ LINE の巨大言語モデル HyperCLOVA 開発の裏側 5 clicks メルカリの検索基盤の変遷について 5 clicks Articles Search Amazon の製品検索で使われるロバストなキャッシュ手法の論文「ROSE: Robust Caches for Amazon Product Search」
Amazon 検索で使用されているロバストなキャッシュの仕組みについて紹介した Blog 記事を書きました。 キャッシュ機構の中で、クエリ書き換えと深層学習モデルの推論結果のキャッシュを同時に実行している点が技術的にとても面白い点です。
検索一筋 10 年のエンジニアが語る、1,800 万点の商品検索パーソナライズ化への挑戦- モノタロウ
モノタロウさんの検索機能はとてもおもしろいんですが、その開発裏が書かれている記事。 例えばですが、工具の通販モノタロウ 測定・測量用品 測定用品 厚さ測定とかを見てるとわかるんですが、各商品に付随する商品のファセットの種類が鬼のように細かくてどう管理しているのか非常に気になりますね。
例えば、キーワード入力の少しの違いでユーザーが必要としている商品が違ってくることもあり、全文検索機能だけでは計算ができない部分を外側から調整する仕組みなども構築してきました。わかりやすい例をあげると、「3m テープ」と検索された場合は、ブランドの 3M（スリーエム）社製のテープを求めているお客様が多く、「テープ 3m」と検索された場合は 3 メートルのテープを求めているお客様が多いなどを判定して検索結果を出し分けています。
良い話ですね。確かに bi-gram としては一緒でも、Query intent は全く違いそう。</description></item><item><title>デスクトップのGoogle 検索の検索フォームUIがかなり変化していた</title><link>https://shunyaueta.com/posts/2022-03-04/</link><pubDate>Fri, 04 Mar 2022 00:03:08 +0900</pubDate><guid>https://shunyaueta.com/posts/2022-03-04/</guid><description>現在 AB テスト中なのかもしれないが、かなり変化している。
以前は QAC(Query Auto Completition) のみ、検索フォームにフォーカスがあたった時に表示していた記憶がある。 だが、現在は一度キーワードを検索して検索結果画面に遷移した後に、検索フォームにフォーカスすると
の画面のように、Query Suggest や Knowledge graph の結果をキーワードフォームに表示するようになった。
確かに、キーワードを再度検索する際に上記のコンポーネントを入れるのは試してみるのは良いのかもしれない。
特にデスクトップの検索ならハコもかなり余っているのでまだ有効活用できる余地はありそう。
でも、検索のユーザーインターフェースを紹介する書籍ではアンチパターンなのでどうなんだろうか。
情報検索のためのユーザインタフェース
1.1: KEEPING THE INTERFACE SIMPLE https://searchuserinterfaces.com/book/sui_ch1_design.html
Figure 1.1: Search results listings from Infoseek in 1997 (left) and Google in 2007 (right), courtesy Jan Pedersen. 画像は上記から引用
と思いつつも、今の Google 検索のインターフェイスも
書籍の Google 検索と見比べてもかなりリッチになっているので、書籍が執筆された 2011 年からすると時代は変わっている感も否めない。
スクリーンショットが取られた 2007 年から 15 年以上も経過してますしね
@joho_hideo さんから面白いコメントがあったので追記しました。
@joho_hideo 特別事例ですが「COVID-19」の検索結果はよく設計されていると思います。 https://twitter.com/joho_hideo/status/1499549278012055552
確かに、これぞまさに情報検索の真髄ですね。 ダッシュボード的な情報を表示している</description></item><item><title>Amazon の製品検索で使われるロバストなキャッシュ手法の論文「ROSE: Robust Caches for Amazon Product Search」</title><link>https://shunyaueta.com/posts/2022-03-03/</link><pubDate>Thu, 03 Mar 2022 09:35:29 +0900</pubDate><guid>https://shunyaueta.com/posts/2022-03-03/</guid><description>Web 検索とデータマイニングのトップカンファレンス WSDM2022 のワークショップで The First International Workshop on INTERACTIVE AND SCALABLE INFORMATION RETRIEVAL METHODS FOR ECOMMERCE (ISIR-ecom) が先日開催された。
テーマは e コマース上での検索において
検索システムのスケーラビリティ どうやって適合性(Relevancy)をシステムで改善したか システムの改善 についてをテーマにした検索エンジニアなら垂涎もののワークショップとなっている。
同様の検索システムや実応用に注目したワークショップでは、以下のようなワークショップがある。
SIGIR Workshop On eCommerce 2017 年から毎年開催。累計 5 回開催 International Workshop on Industrial Recommendation Systems 2020 年から開催。累計二回 歴史としては、 SIGIR ecom が長く、これだけの期間継続開催してくれているのはありがたい限り。
機械学習系の国際会議でも手法ではなく、どう現実世界に適用したかに注目したワークショップが益々誕生しており非常に良い流れ。
ACCEPTED PAPERS は 5 本あり、
Amazon: 2 eBay: 1 The Home depot: 2 と企業関係者による論文が 100%となっている。
https://github.com/ISIR-eCom/ISIR-eCom.github.io/tree/main/papers 最後の PDF 番号が 9 なので、最低でも 9 本の投稿はあった模様。</description></item><item><title>Web 検索とデータマイニングのトップカンファレンス WSDM2022 で気になった研究</title><link>https://shunyaueta.com/posts/2022-03-01/</link><pubDate>Tue, 01 Mar 2022 20:47:53 +0900</pubDate><guid>https://shunyaueta.com/posts/2022-03-01/</guid><description>WSDM は web 検索とデータマイニングのトップカンファレンスの一つです。検索好きなら見てて楽しい論文がたくさん公開されており、毎年採択された研究を楽しみに見ています。
今回 WSDM2022 が 2022/02/21 - 2022/02/25 に開催されたので気になった発表をメモ。
今までこういう気になったトピックなどは Joplin にメモして公開していなかったが、公開しても差し支えはないなと思ったので Blog 記事として公開していってみる。
自分の興味関心トピックは今は基本的に検索関連と機械学習の実践事例なので、それに沿った選出になっています。
Industry Day https://www.wsdm-conference.org/2022/industry-day-schedule/
Challenges in Data Production for AI with Human-in-the-Loop, Dmitry Ustalov (Toloka) Scalable Attribute Extraction at Instacart, Shih-Ting Lin (Instacart) Graph Neural Networks for the Global Economy with Microsoft DeepGraph, Jaewon Yang, Alex Samylkin, Baoxu Shi (LinkedIn, Microsoft) Near real time AI personalization for notifications at LinkedIn, Ajith Muralidharan (LinkedIn) Invited Talk: Rethink e-Commerce Search Workshops https://www.</description></item><item><title>Search Engineering Newsletter vol.02</title><link>https://shunyaueta.com/posts/2022-02-09/</link><pubDate>Wed, 09 Feb 2022 22:17:06 +0900</pubDate><guid>https://shunyaueta.com/posts/2022-02-09/</guid><description>2 回目のニュースレター配信です。
前回の人気記事 Top3 を紹介
LINE MUSIC が挑んだパフォーマンス改善。膨大な楽曲数を扱うための Elasticsearch の設計 7 clicks Elasticsearch Learning to Rank プラグインの使い方とポイント 5 clicks DMM の検索に機械学習を導入して、A/B テストで圧勝した考え方 4 clicks Articles Search Building a Search Technology Radar
Technology Radar という概念を検索技術領域に適用してみたよという記事。 Technology Radar をざっくり紹介すると、同心円状の領域を 4 象限に分割して、中心に近ければ近いほど必ずこの技術に適応していおくべき、そして中心から外れていくと将来的に重要になっていくだろうというトピックを可視化する概念。 概念としては面白んだが、ざっくりしすぎてるなと思っていたら著者の Eric さんが気になる領域を挙げてくれていた。
The Rise of Neural Search
Neural Search の定義としては、形態素ベースの検索を超えた検索手法の総称(広すぎる&amp;hellip;w)。 Neural Search は今はみんな使っていないけれども、近いうちに使い始める未来が来るんじゃないかという予想 Blossoming of Non Lucene-based Engines
長年全文検索エンジンの Lucene ベースの検索サーバーである Elasticsearch, Solr がメインで使われてきたが。最近は非 Lucene ベースの検索エンジンも出てきた。例として挙げられたソフトウェアとしては Tantivy: Java 言語ではなく Rust で書かれた Lucene の再実装 milvus, weaviate: ベクトル検索エンジン メルカリの検索基盤の変遷について</description></item><item><title>Search Engineering Newsletter vol.01</title><link>https://shunyaueta.com/posts/2022-01-21/</link><pubDate>Fri, 21 Jan 2022 22:11:45 +0900</pubDate><guid>https://shunyaueta.com/posts/2022-01-21/</guid><description>以前に告知したとおり、検索領域と機械学習領域で面白かった記事をここで紹介していきます。 ガッツリ量を書くために溜め込むよりも一定量溜まったら配信したほうが、書く側としても気が楽なので暫くその方針で行ってみます。
Articles Search elastic/elasticsearch - Integrate ANN search #78473
elasticsearch 8.x では Lucene 9.0 から提供される ANN(近似近傍探索)機能が提供される予定。以前から提供されていた elasticsearch の exact k NN はプロダクション環境下では使えない性能だったが、Lucene の ANN 検索は結果がどうなるか非常に気になる。ES に組み込まれることで、ANN の結果に対して、フィルタリング、ハイブリッド検索など ES の検索エンジンと組み合わせた利用が期待できるので追っておきたい。
apache/solr - SOLR-15880 #476
Solr も同じく ANN の提供を準備中。
個人的には、ANN のことを kNN と書くのは紛らわしいのでやめてほしいし、ANN のことを Neural Search と読んでいて、え?いいの??と思ったりした。
これが実装されれば、Vespaや、各 OSS やエンタープライズの近似近傍探索エンジンがどうなっていくのかは非常に面白い未来ですね。
Reddit Search: A new API
Reddit が検索 API を刷新したお話。 システム的にどう嬉しいかや、チーム編成が変わって、10 年間でインフラエンジニアが兼業で開発していた状態から、検索エンジニア、専任のクライアントエンジニアがフルタイムで改善していく体制に変わったなど、変化がしれて面白かった。
今までのreddit の検索システム Blog 記事シリーズも面白そうだったので読もう。
Search at Shopify—Range in Data and Engineering is the Future</description></item><item><title>Search Engineering Newsletter vol.00</title><link>https://shunyaueta.com/posts/2022-01-16/</link><pubDate>Sun, 16 Jan 2022 00:00:37 +0900</pubDate><guid>https://shunyaueta.com/posts/2022-01-16/</guid><description>検索技術とその関連領域を取り扱うニュースレターを不定期配信してみることにします。
2022 年から心機一転として、情報発信を今まで Twitter メインでやっていましたが、ニュースレターで行っていこうと思っています。 以下の Revue のリンクから登録が可能です。
Search Engineering Newsletter By hurutoriya
扱うトピックとしては、検索エンジンと情報検索の周辺領域です。 経緯としては、自分の職域である情報は積極的に収集しており、どうせなら発信したいなと考えて Twiter や、機械学習エンジニア時代には Revue を使って MLOps 領域に特化してニュースレター配信を試しにやってみた(覚えているかたもいるかも?)ことがありましたが、結局 Twitter で配信すれば同じではと考えてしまい、なんだかんだ継続できませんでした。
ですが、最近は Twitter での情報取得から抜け出して、一息ついた状態で情報収集を行うようになりたいなと思うなかで、改めて Twitter の発信だけではなく、ニュースレターのように頻度は不定期だが高品質な情報が一箇所にまとまって届けることができたら面白いなと考えました。(またニュースレター形式だと Twitter では届かない層にも届くんじゃないのかなと)
現在は自分は検索エンジニアとして働いており、検索技術と情報検索の情報を積極的に収集しています。そのなかで自分が当該領域で注目したニュースレターを不定期に配信できればなと思ってニュースレターを再開してみました。 検索領域に関連する気になった記事や自分の Blog 記事の執筆などをここで紹介していきます。
不定期配信ですが、興味を持っていただけたらぜひ購読をお願いします。</description></item><item><title>Amazon検索ランキングの奥深さ at MLconf SF 2016</title><link>https://shunyaueta.com/posts/2021-12-26/</link><pubDate>Sun, 26 Dec 2021 22:52:06 +0900</pubDate><guid>https://shunyaueta.com/posts/2021-12-26/</guid><description>1 日遅れてしまいましたが、情報検索・検索技術 Advent Calendar 2021 25 日目の記事です。
ついにアドベントカレンダー最終日を迎えました! 今年はまだ検索領域のアドベントカレンダーが作られていないからということで、勢いで情報検索・検索技術 Advent Calendar 2021を作りましたが、多くの方に投稿に協力していただきありがとうございました。
社内勉強会の発表でネタを探しており、2016 年と少し昔の情報ですが、Amazon の製品検索において、どのようにランキングを行っているかの公演動画が非常に面白かったので、勉強がてら残したメモを記事として公開します。
今回の口頭発表は MLconf という開発者会議(非学会・非アカデミック)で発表されています。 自分が知る限り、MLconf は機械学習黎明期から高品質な発表が継続されて発信されており、非常に素晴らしいカンファレンスの一つ。 国際会議には投稿されていないが、実応用の観点からしてとても学びの多い発表がとても多いです。 機械学習の応用を考えている場合、世界の最先端事例を知ることができるので非常におすすめです。
Referemces Sorokina, D., &amp;amp; Cantu-Paz, E. (2016, July). Amazon search: The joy of ranking products. In Proceedings of the 39th International ACM SIGIR conference on Research and Development in Information Retrieval (pp. 459-460).
Amazon Search: The joy of ranking products in amazon science Youtube メモ 自分の私的な意見は NOTE: で書いておきます。</description></item><item><title>Amazonがeコマース検索を Lucene により、どうスケールさせているか at Berlin Buzzwords 2019</title><link>https://shunyaueta.com/posts/2021-11-26/</link><pubDate>Fri, 26 Nov 2021 20:59:21 +0900</pubDate><guid>https://shunyaueta.com/posts/2021-11-26/</guid><description>情報検索・検索技術 Advent Calendar 2021 1 日目の記事です。 早めに書き終えたので、カレンダー登録日の 2021/12/01 よりもはやめですが、記事を公開してしまいます。
Berlin Buzzwords はドイツで毎年開催されている OSS を利用した検索、データ処理、データベースに焦点をあてたカンファレンスです。
検索関係のシステムに携わっている場合、毎年面白い内容が目白押しなのでぜひとも見てほしい。
今回は Berlin Buzzwords 2019 で発表された「Amazon では Lucene をどう活用して e コマース検索をスケールさせているか」の講演動画を社内勉強会で紹介するために視聴したので、そのメモを公開する。
E-Commerce search at scale on Apache Lucene YouTube Web page PDF 自分の所感などを切り分けるため、自分の意見は IMO ではじめた文にして、メモっています。
Overview クエリの p999 latency に対して非常に厳しい制限を行っている IMO このクエリの p999 latency 定義は、Lucene+(おそらく内製で今も開発している、response を返すための Lucene server?)が返す検索のレスポンスを指していると思われる p99.9 latency を SLA として、監視しているのはたしかにとてもシビアな基準だと感じる。 Amazon の query rate はめちゃくちゃピーキー (daily, weekly, yearly) Why Lucene?</description></item><item><title>クエリ分類(Query Classification) について社内の勉強会で話してきた</title><link>https://shunyaueta.com/posts/2021-10-09/</link><pubDate>Sat, 09 Oct 2021 00:42:40 +0900</pubDate><guid>https://shunyaueta.com/posts/2021-10-09/</guid><description>今年の 10 月から、新しく入社した同僚とともに、検索領域の論文や技術ブログを定期的に紹介する社内勉強会をはじめてみた。 定常的に開催されることが一番大事だよねという方針になったので、以下のような仕組みで、可能な限り低コストで継続できるような仕組みにした。
参加者は何も準備をしなくても大丈夫で、勉強会中に紹介された論文をみたり話を聞くだけで良い 発表者は凝った資料は用意するのは必須ではなく、極論論文を画面共有で見せながらしゃべるだけでも問題なし 当面の目標としては、来年の年末まで継続されているように気長に続けていきたい。
第一回は、発起人の一人である自分がクエリ分類について発表を行った。
Query Understanding for Search Engines (The Information Retrieval Series, 46) の第二章を主にテーマとして取り上げて紹介した。
メイントピックは KDDCup2005 として開催されたクエリ分類コンペの優勝者の手法について紹介を行ったので、気になる方はスライドを公開しているので御覧ください。
このコンペの特徴として、
データセットが生データ特有の問題として汚い そしてラベルデータの規模がとても少ない という鬼畜仕様だった。 だがコンペ参加者はそんな状態を物と物せずにありとあらゆる手段で精度向上に努めていてそれらの手法と姿勢がとても参考になった。
Query Understanding の包括的な解説は 晋策さんが書かれた 検索体験を向上する Query Understanding とは がわかりやすいのでおすすめです。
検索領域は本当に奥深い&amp;hellip;</description></item><item><title>eコマースの検索と推薦についてのサーベイ論文である 'Challenges and research opportunities in eCommerce search and recommendations' を社内勉強会で発表した</title><link>https://shunyaueta.com/posts/2021-07-10/</link><pubDate>Sat, 10 Jul 2021 23:20:58 +0900</pubDate><guid>https://shunyaueta.com/posts/2021-07-10/</guid><description>SIGIR eCom を探索していたら発見したサーベイ論文の &amp;ldquo;Challenges and research opportunities in eCommerce search and recommendations&amp;quot;が面白かったので、社内の勉強会で発表してきた。
和訳すると、「e コマースの検索と推薦における挑戦と研究トピック」で、e コマースにおける検索と推薦の課題が明瞭に書かれていて非常に面白い論文でした。 自分もまだ検索エンジニアとして日が浅いので、手持ちのパターンを増やせるように日々勉強していますが、この論文のおかげでかなり解像度が上がった。
個人的に面白かったのは、
そもそも、顧客が商品を検索するというタスクの奥深さと面白さが知れる Query Understanding は、非構造なクエリを構造化されたクエリに変換するのが究極的な目標 Learn to Rank(LtR)の実践的な課題点として、LtR 適用時に、Native Ranker とのギャップが発生して非連続な検索結果を返してしまうことがある 実際のクエリから、購入される商品はクエリと商品が関連性が高いとは限らないのでモデルを学習させる際には要注意 Amazon での実例として クエリ「ダイヤモンドリング」に対して LtR を適用すると、実際のクエリとそれに紐づくランキングシグナルから学習すると、「ダイヤモンドリング」というクエリで、「ジルコニウムリング」が大量に購買されていたので LtR では、「ダイヤモンドリング」というクエリに対して、「ジルコニウムリング」を表示するようになってしまった これは、学習データを全く見ないで適用するとそうなりそうだけど、広範囲に影響を及ぼす LtR の QA は非常に骨が折れそう Ref: Amazon Search: The Joy of Ranking Products スライド作成元の Markdown ファイルはhurutoriya/deckはこちらです。 スライド内のリンクに簡単にアクセスできます。
e コマースでの検索に改善したいけど何したらいいかわからんという人は、とりあえずこれ見れば OK という論文だったので読めてよかった
余談 Matching &amp;amp; Ranking の章までを解説したけど、それでも 45m 喋りっぱなしで最後のほうがかなり駆け足になってしまった。 また、英語での発表になったけど、やはり熟れたわかりやすい発表レベルに達するには、まだまだだなぁ感じた。精進せねば</description></item><item><title>[抄訳] 検索エンジンの達成度と検索チームの成熟度モデル</title><link>https://shunyaueta.com/posts/2021-05-12/</link><pubDate>Wed, 12 May 2021 22:33:23 +0900</pubDate><guid>https://shunyaueta.com/posts/2021-05-12/</guid><description>@rilmayer_jp さんのツイート をきっかけに、検索チームの成熟度モデルの存在を知りました。ありがとうございます!
Eric Pugh さんが、検索エンジンに関する会議で公演した内容で、検索チームがどのように成熟していくかをモデル化しており、それが面白かったので備忘録として残しておく
更新 2021/05/13 : 原著者のEric Pugh さんから、抄訳のご快諾いただけました。ありがとうございます 翻訳元資料 Search Relevance Organizational Maturity Model slide Haystack LIVE! 2020 Search Relevance Organizational Maturity Model 検索エンジンのレベル 検索エンジンへの要求をどれだけ満たしているかをピラミッド構造でわかりやすく説明している
検索チームの成熟度モデル 7 項目の検索チームの評価項目を考え、3 段階で評価を行う
ビジネス 顧客の要求の理解 検索技術 実験駆動 UX コンテンツ強化 データ保有 発展 ステークホルダーがリアルタイム KPI を使用している データ解析から質的なデータを得ている カスタムプラグインを作成している A/B テスト、オフラインテストをサポートしている 革新的な発見性を提供している(chatbot, 等) NLP やデータサイエンティストの専任チームが取り組んでいる 多種多様な、複雑かつ大規模なデータを扱っている 実践 不定期にレポートを行っている いくつかのユーザーテスト、基礎的な分析を行っている 関連性のための複雑な設定、プラグインの使用をしている 実験は適用可能だが、A/B テストなどはできない 発見しやすくするための UI を提供している 分類学や概念体型の適用をしている データの複雑度の監視している 基礎 ビジネスインパクトが測定されていない クエリログは存在しない、またはユーザーテストを行っていない 技術スタックを適度に調整している 検索のテストは手作業で行い、デプロイは低頻度 1 ページに 10 個の検索結果がある 僅かな取り組み(シノニムなど) とても単純なデータモデル 感想 ひと目で</description></item></channel></rss>