<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/"><channel><title>slack on hurutoriya</title><link>https://shunyaueta.com/tags/slack/</link><description>Recent content in slack on hurutoriya</description><image><url>https://shunyaueta.com/ogp.jpg</url><link>https://shunyaueta.com/ogp.jpg</link></image><generator>Hugo -- gohugo.io</generator><language>ja</language><lastBuildDate>Thu, 02 Mar 2023 11:32:47 +0900</lastBuildDate><atom:link href="https://shunyaueta.com/tags/slack/index.xml" rel="self" type="application/rss+xml"/><item><title>Slack bot の Eeny がスクラムイベントのファシリテーターを選出するのにめっちゃ便利</title><link>https://shunyaueta.com/posts/2023-03-02-1132/</link><pubDate>Thu, 02 Mar 2023 11:32:47 +0900</pubDate><guid>https://shunyaueta.com/posts/2023-03-02-1132/</guid><description>経緯 スクラムイベントのファシリテーターは特定の人がやるのではなく、誰でもできるようにしたい 特定メンバーを選出するスクリプト自体はすぐかけるが、それを Slack で連携するに zapier を使って運用していたが、色々とめんどくさい(原因不明のエラーが出たり、zapier のワークフローがやりたいことは単純なのに、複雑になりがち) もっとお手軽にファシリテーターを選出できないかなと探していたら、他のチームが Eeny という Slackbot で実現していてその Bot がめっちゃ便利 Eeny | A Slack bot for picking people at random
運用方法 今やっている運用法としては、
Slack アカウントを特定のリストに追加・削除 Slack reminder でそのリストを定期的に呼び出せば、そのリストのスラックのアカウントの中から自動的に選出される ラウンドロビン方式ではないので、２回連続で選出されることもあるが、その時はpick again というボタンが表示されておりクリックすれば Eeney によって再び選出されるので、その取り回しも簡単。 1 @Eeny stats HOGE でリストHOGEで過去に選出されたアカウントの統計量も見れるから、特定のメンバーが偏ってファシリテーターしている状態も簡単に確認できる。
設計が秀逸だなと思ったのは、Eeny 自体は定期実行機能を持っていなくて、メンションされたときにリアクティブに結果を返すだけにしているのが、運用に柔軟性があって素晴らしいなと思った点です。
このおかげで、自律的なファシリテーター運営が簡単にできるようになって最高</description></item><item><title>Slack チャンネルに GitHub の特定リポジトリのrelease を通知する</title><link>https://shunyaueta.com/posts/2022-01-27/</link><pubDate>Thu, 27 Jan 2022 11:44:11 +0900</pubDate><guid>https://shunyaueta.com/posts/2022-01-27/</guid><description>Slack 公式のヘルプページには反映されていないが、GitHub の Slack integration で特定リポジトリの release を購読してチャンネルに通知することができる。
利用用途としては、更新を追いかけておきたいリポジトリやリリースチャンネルに対して、リリースが作成されました、このリリースが次のデプロイ予定だよと通知させたい場合に便利。
Slack コマンド
1 2 3 4 # リリースを購読 /github subscribe elastic/elasticsearch releases # デフォルトで、issues, pulls, commits, release, deployment すべてが購読されてしまうので、 releases 以外購読を解除 /github unsubscribe elastic/elasticsearch issues,pulls,commits,deployments Slack の日本語公式ドキュメントにはフィードバックを送ったので、近いうちに反映されるかもしれない
References GitHub と Slack を連携させる integrations/slack</description></item></channel></rss>