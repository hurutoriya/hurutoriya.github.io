<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Pytorch on Software Engineer as Data Scientist</title><link>https://shunyaueta.com/tags/pytorch/</link><description>Recent content in Pytorch on Software Engineer as Data Scientist</description><generator>Hugo -- gohugo.io</generator><lastBuildDate>Tue, 24 Sep 2019 23:16:07 +0900</lastBuildDate><atom:link href="https://shunyaueta.com/tags/pytorch/index.xml" rel="self" type="application/rss+xml"/><item><title>Tensorboard を わずか2行で Jupyter Notebook上で表示</title><link>https://shunyaueta.com/posts/2019-09-24_open_tensorboard_in_jupyter/</link><pubDate>Tue, 24 Sep 2019 23:16:07 +0900</pubDate><guid>https://shunyaueta.com/posts/2019-09-24_open_tensorboard_in_jupyter/</guid><description>Pytorch 1.2からは公式にTensorboardがサポートされている
Tensorboard とは、学習の状況を可視化できるTensorFlow Family の一種
Jupyte Notebook上で学習状況を確認したい場合に Tensorboardをそのまま表示して確認できれば楽なので、試してみる
sample code: https://pytorch.org/docs/stable/tensorboard.html
import torch import torchvision from torch.utils.tensorboard import SummaryWriter from torchvision import datasets, transforms # Writer will output to ./runs/ directory by default writer = SummaryWriter() transform = transforms.Compose([transforms.ToTensor(), transforms.Normalize((0.5,), (0.5,))]) trainset = datasets.MNIST(&amp;#39;mnist_train&amp;#39;, train=True, download=True, transform=transform) trainloader = torch.utils.data.DataLoader(trainset, batch_size=64, shuffle=True) model = torchvision.models.resnet50(False) # Have ResNet model take in grayscale rather than RGB model.conv1 = torch.nn.Conv2d(1, 64, kernel_size=7, stride=2, padding=3, bias=False) images, labels = next(iter(trainloader)) grid = torchvision.</description></item></channel></rss>