<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/"><channel><title>streamlit on Shunya Ueta</title><link>https://shunyaueta.com/tags/streamlit/</link><description>Recent content in streamlit on Shunya Ueta</description><image><url>https://shunyaueta.com/ogp.jpg</url><link>https://shunyaueta.com/ogp.jpg</link></image><generator>Hugo -- gohugo.io</generator><language>ja</language><lastBuildDate>Fri, 09 Jul 2021 22:40:37 +0900</lastBuildDate><atom:link href="https://shunyaueta.com/tags/streamlit/index.xml" rel="self" type="application/rss+xml"/><item><title>How to get the uploaded file path and processing its file in Streamlit</title><link>https://shunyaueta.com/posts/2021-07-09/</link><pubDate>Fri, 09 Jul 2021 22:40:37 +0900</pubDate><guid>https://shunyaueta.com/posts/2021-07-09/</guid><description>Motivation Streamlit is a powerful tools to quickliy build the demo application. If we use Streamlit file upload feature via WebBrowser then we need to its file path to process the uploaded file. So I will introduce how to get uploaed file path in Streamlit.
Example We buid the PDF File upload feature in Streamlit and its PDF file convert to image. We use Belval/pdf2image which is a populer PDF converting tool.</description></item><item><title>Streamlit でアップロードしたファイルのパスを取得して、特定の処理をする</title><link>https://shunyaueta.com/posts/2021-07-08/</link><pubDate>Thu, 08 Jul 2021 22:40:37 +0900</pubDate><guid>https://shunyaueta.com/posts/2021-07-08/</guid><description>モチベーション Streamlit はPython code のみで簡単かつ高速にWebアプリを作成できる強力なパッケージ。 Streamplit で作られたWebアプリ経由でファイルをアップロードして、そのファイルを処理したい際の具体的な実現方法がなかったので備忘録がてら残しておく。
PDFファイルをアップロードして、画像に変換するWebアプリ 具体的に例を交えつつ説明する。 Streamlit を使って、PDFファイルをアップロードしてアップロードされたPDFファイルを画像化するアプリを作成する。 今回は、Belval/pdf2image というPDFパッケージを使用する。 このパッケージは処理したいPDFのファイルパスを要求するインターフェースなので今回の実例に沿っていてわかりやすい。 ローカルマシンは MacOS を想定しており、pdf2image はpoppler の事前インストールが必須。
完成形のスクリーンショット GitHubでもコードを公開しておきました。
hurutoriya/streamlist-file-uploader-example
デモ動画はこちら
Demo Movie in Youtube
Makefile Makefile は依存パッケージを事前インストールするために採用
1 2 3 4 5 install: brew install poppler poetry install run: poetry run streamlit run streamlit_pdf_uploader/main.py Poetry for package management 環境構築はpoetry を使っています。
1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 [tool.</description></item></channel></rss>