<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Development on</title><link>https://shunyaueta.com/tags/development/</link><description>Recent content in Development on</description><generator>Hugo -- gohugo.io</generator><language>ja</language><copyright>© 2016-20 &lt;a href='https://twitter.com/hurutoriya'>@hurutoriya&lt;/a>.</copyright><lastBuildDate>Wed, 27 Dec 2017 08:12:17 +0000</lastBuildDate><atom:link href="https://shunyaueta.com/tags/development/index.xml" rel="self" type="application/rss+xml"/><item><title>HerokuのDBにpgadmin4で接続してローカルにデータをダウンロードする</title><link>https://shunyaueta.com/posts/2017-12-27_heroku%E3%81%AEdb%E3%81%ABpgadmin4%E3%81%A7%E6%8E%A5%E7%B6%9A%E3%81%97%E3%81%A6%E3%83%AD%E3%83%BC%E3%82%AB%E3%83%AB%E3%81%AB%E3%83%87%E3%83%BC%E3%82%BF%E3%82%92%E3%83%80%E3%82%A6%E3%83%B3%E3%83%AD%E3%83%BC%E3%83%89%E3%81%99%E3%82%8B/</link><pubDate>Wed, 27 Dec 2017 08:12:17 +0000</pubDate><guid>https://shunyaueta.com/posts/2017-12-27_heroku%E3%81%AEdb%E3%81%ABpgadmin4%E3%81%A7%E6%8E%A5%E7%B6%9A%E3%81%97%E3%81%A6%E3%83%AD%E3%83%BC%E3%82%AB%E3%83%AB%E3%81%AB%E3%83%87%E3%83%BC%E3%82%BF%E3%82%92%E3%83%80%E3%82%A6%E3%83%B3%E3%83%AD%E3%83%BC%E3%83%89%E3%81%99%E3%82%8B/</guid><description>pyadmin4 で Heroku 上の DB に接続する記事が日本語になかったので、メモ
接続前の準備 Heroku にログインして、対象の App の DB のページへ
Heroku App DB page
そこから DB のセッティングページにある credential ボタンをクリック
click credential button
そこに記載されている各種情報を pgadmin4 に入力して Heroku 上の DB に接続する
Copy information
pgadmin4 で Heroku の DB に接続 以下のページから pgAdmin4 をダウンロード
Download
そこからアプリを開くと下記の画面になるので、Add new Serverをクリック
Click Add New Server
Heroku 上の DB の情報を入力していく。Server の名前は適当で大丈夫です。
接続されるとこんな感じになります。
Query Tool Query Toolを使うことで Heroku 上の DB に対して SQL クエリを投げる事ができます。
Query Toolは上部のツールバーからアクセス可能です。 注意) 左カラムのテーブルをクリックした後でないとアクティブになりません。</description></item><item><title>Jupyter上でSVGのイラストやアニメーションが作成できるプラグイン egel</title><link>https://shunyaueta.com/posts/2017-11-22_jupyter%E4%B8%8A%E3%81%A7svg%E3%81%AE%E3%82%A4%E3%83%A9%E3%82%B9%E3%83%88%E3%82%84%E3%82%A2%E3%83%8B%E3%83%A1%E3%83%BC%E3%82%B7%E3%83%A7%E3%83%B3%E3%81%8C%E4%BD%9C%E6%88%90%E3%81%A7%E3%81%8D%E3%82%8B%E3%83%97%E3%83%A9%E3%82%B0%E3%82%A4%E3%83%B3-egel/</link><pubDate>Wed, 22 Nov 2017 12:04:30 +0000</pubDate><guid>https://shunyaueta.com/posts/2017-11-22_jupyter%E4%B8%8A%E3%81%A7svg%E3%81%AE%E3%82%A4%E3%83%A9%E3%82%B9%E3%83%88%E3%82%84%E3%82%A2%E3%83%8B%E3%83%A1%E3%83%BC%E3%82%B7%E3%83%A7%E3%83%B3%E3%81%8C%E4%BD%9C%E6%88%90%E3%81%A7%E3%81%8D%E3%82%8B%E3%83%97%E3%83%A9%E3%82%B0%E3%82%A4%E3%83%B3-egel/</guid><description>アイデアは面白い… けど easy drawing ではない
Jupyter 使ってると作図も Jupyter 上で完結させたいなぁ~って思うときがあるんですが、スクリプトで作図はけっこう辛いものがあります
そのため Jupyter 上でフリースタイルに作図できる機能ないかなと探してたら egal という面白そうな拡張機能があったので使ってみました
uclmr/egal
egal GIF animation
以下のリポジトリから $pip3 install git+https://github.com/uclmr/egal.gi
でクローンしてきて $jupyter nbextension install --py egal $jupyter nbextension enable --py egal
で拡張機能を有効にして使えるようになります。
ブラシアイコンをクリックすると新たなセルが生成される
👉 ボタンをクリックすると各オブジェクトの詳細なプロパティが調整できる
フレーム毎にオブジェクトを設定してアニメーションっぽくもできる
5–6 分使ってみて感じましたが、めちゃくちゃ操作がしづらい…
やはりブラウザ上での図形作成はめちゃくちゃストレスたまるので、ローカルで keynote 使って図形作成したほうがマシな感じです。
遊んだ結果を notebook で github にアップしておきました。
残念ながら SVG が Github 上ではレンダリングされないので残念な感じになっております&amp;hellip; ローカルにクローンしてきて egal を有効にしておくと見れます。
hurutoriya/notebook
結論 Jupyter で全てを完結させるのは難しい</description></item></channel></rss>