<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Jupyter on Shunya Ueta</title><link>https://shunyaueta.com/tags/jupyter/</link><description>Recent content in Jupyter on Shunya Ueta</description><generator>Hugo -- gohugo.io</generator><language>ja</language><copyright>© Shunya Ueta</copyright><lastBuildDate>Wed, 25 Sep 2019 23:16:07 +0900</lastBuildDate><atom:link href="https://shunyaueta.com/tags/jupyter/index.xml" rel="self" type="application/rss+xml"/><item><title>Tensorboard を わずか2行で Jupyter Notebook上で表示</title><link>https://shunyaueta.com/posts/2019-09-25/</link><pubDate>Wed, 25 Sep 2019 23:16:07 +0900</pubDate><guid>https://shunyaueta.com/posts/2019-09-25/</guid><description>Pytorch 1.2 からは公式に Tensorboard がサポートされている Tensorboard とは、学習の状況を可視化できる TensorFlow Family の一種 Jupyte Notebook 上で学習状況を確認したい場合に Tensorboard をそのまま表示して確認できれば楽なので、試してみる sample code: https://pytorch.org/docs/stable/tensorboard.html import torch import torchvision from torch.utils.tensorboard import SummaryWriter from torchvision import datasets, transforms # Writer will output to ./runs/ directory by default writer = SummaryWriter() transform = transforms.Compose([transforms.ToTensor(), transforms.Normalize((0.5,), (0.5,))]) trainset = datasets.MNIST(&amp;#39;mnist_train&amp;#39;, train=True,</description></item><item><title>Google Colaboratory で Mecab-ipadic-Neologd を使うまで</title><link>https://shunyaueta.com/posts/2018-04-23/</link><pubDate>Mon, 23 Apr 2018 15:38:10 +0000</pubDate><guid>https://shunyaueta.com/posts/2018-04-23/</guid><description>Colab 上で 日本語の NLP をしたいときありませんか？ Success Code Google Colabratory https://colab.research.google.com/drive/1YK8XFnfD29775lEYWhwz3wh4h8boR9iE</description></item><item><title>Jupyter Notebookの差分を明瞭に確認する事ができるpackage : nbdime</title><link>https://shunyaueta.com/posts/2018-01-15/</link><pubDate>Mon, 15 Jan 2018 17:14:54 +0000</pubDate><guid>https://shunyaueta.com/posts/2018-01-15/</guid><description>Jupyter notebook をご利用の皆さん、朗報です。 例えば、下記の２つの notebook の差分を比較したい際に、 nb_1.ipynb nb_2.ipynb diffコマンドを用いると下記のような結果になってしまいます。 &amp;amp;gt;&amp;amp;gt; diff nb_1.ipynb nb_2.ipynb [master] 14c14 &amp;amp;lt; “image/png”: “iVBORw0KGgoAAAANSUhEUgAAAX8A</description></item><item><title>PythonでGaussian Kernelのアニメーションを作成</title><link>https://shunyaueta.com/posts/2018-01-13/</link><pubDate>Sat, 13 Jan 2018 17:03:43 +0000</pubDate><guid>https://shunyaueta.com/posts/2018-01-13/</guid><description>Python でアニメーションを作成したかったのでメモ Gaussian Kernel GIF Animation 当然ながら、HTML5 の Video は再生されないので GIF に変換した結果が以下。 これで HTML5 で再生される。 **GIF**で表示する方法として %matplotlib nbagg というオプションが存在しているが、Kernel が busy 状態を何度も</description></item><item><title>JupyterNotebookをリモートサーバー上で公開して、どこでも研究開発 &amp; 講義でJupyterhubを利用する</title><link>https://shunyaueta.com/posts/2017-12-22/</link><pubDate>Fri, 22 Dec 2017 17:48:12 +0000</pubDate><guid>https://shunyaueta.com/posts/2017-12-22/</guid><description>JupyterNotebook をリモートサーバー上で公開して、どこでも研究開発 &amp;amp; 講義で Jupyterhub を利用するお話です。 GIF 画像は下記の記事で知ったtqdmというパッケージを使いたくなった衝動の成れの果てです。 私が選ぶ 2015 年の”新しい”Python モジュール トップ 5 IPython データサイエンス</description></item><item><title>Jupyter上でSVGのイラストやアニメーションが作成できるプラグイン egel</title><link>https://shunyaueta.com/posts/2017-11-22/</link><pubDate>Wed, 22 Nov 2017 12:04:30 +0000</pubDate><guid>https://shunyaueta.com/posts/2017-11-22/</guid><description>アイデアは面白い… けど easy drawing ではない Jupyter 使ってると作図も Jupyter 上で完結させたいなぁ~って思うときがあるんですが、スクリプトで作図はけっこう辛いものがあります そのため Jupyter 上でフリースタイルに作図できる機能ないかなと探してたら egal という面白そうな拡張機能が</description></item></channel></rss>